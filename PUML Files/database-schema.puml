@startuml Database Schema
!theme plain
skinparam backgroundColor #f8f9fa

title E-commerce Database Schema (MongoDB Collections)

package "User Management" {
    entity "users" {
        * _id : ObjectId
        --
        * name : String
        * email : String (unique)
        * password : String (hashed)
        * role : String (customer/seller/admin)
        * image : String (profile image URL)
        * method : String (manual/google/facebook)
        status : String (active/pending/blocked)
        shopInfo : Object (for sellers)
        createdAt : Date
        updatedAt : Date
    }
}

package "Product Catalog" {
    entity "categories" {
        * _id : ObjectId
        --
        * name : String
        * image : String
        createdAt : Date
        updatedAt : Date
    }

    entity "products" {
        * _id : ObjectId
        --
        * sellerId : ObjectId (ref: users)
        * name : String
        * category : String
        * description : String
        * price : Number
        * discount : Number
        * images : Array[String]
        * brand : String
        * stock : Number
        shopName : String
        slug : String
        rating : Number
        reviewCount : Number
        status : String (active/pending/blocked)
        createdAt : Date
        updatedAt : Date
    }
}

package "Order Management" {
    entity "customerOrders" {
        * _id : ObjectId
        --
        * customerId : ObjectId (ref: users)
        * products : Array[Object]
        * price : Number
        * payment_status : String
        * shippingInfo : Object
        * delivery_status : String
        * date : Date
        createdAt : Date
        updatedAt : Date
    }

    entity "authOrders" {
        * _id : ObjectId
        --
        * orderId : String
        * sellerId : ObjectId (ref: users)
        * products : Array[Object]
        * price : Number
        * payment_status : String
        * shippingInfo : Object
        * delivery_status : String
        * date : Date
        createdAt : Date
        updatedAt : Date
    }
}

package "Communication" {
    entity "customerSellerMessages" {
        * _id : ObjectId
        --
        * senderName : String
        * senderId : String
        * receiverName : String
        * receiverId : String
        * message : String
        * status : String (unseen/seen)
        createdAt : Date
    }

    entity "sellerAdminMessages" {
        * _id : ObjectId
        --
        * senderName : String
        * senderId : String
        * receiverName : String
        * receiverId : String
        * message : String
        * status : String (unseen/seen)
        createdAt : Date
    }
}

package "Shopping Cart" {
    entity "carts" {
        * _id : ObjectId
        --
        * userId : ObjectId (ref: users)
        * productId : ObjectId (ref: products)
        * quantity : Number
        createdAt : Date
        updatedAt : Date
    }

    entity "wishlists" {
        * _id : ObjectId
        --
        * userId : ObjectId (ref: users)
        * productId : ObjectId (ref: products)
        createdAt : Date
    }
}

' Relationships
users ||--o{ products : "seller creates"
users ||--o{ customerOrders : "customer places"
users ||--o{ authOrders : "seller receives"
users ||--o{ carts : "user has"
users ||--o{ wishlists : "user has"
categories ||--o{ products : "categorizes"
products ||--o{ carts : "added to"
products ||--o{ wishlists : "added to"

note right of users
  Central user entity supporting
  multiple roles: customer, seller, admin
  Password is hashed using bcrypt
end note

note right of products
  Products belong to sellers
  Support multiple images via Cloudinary
  Include rating and review system
end note

note right of customerOrders
  Customer-facing order records
  Include shipping and payment info
end note

note right of authOrders
  Seller-facing order records
  Mirror customer orders for seller management
end note

@enduml
