@startuml Product Management Flow
!theme plain
skinparam backgroundColor #f8f9fa

title Product Management System Flow

actor Seller
actor Customer
actor Admin
participant "Frontend" as Frontend
participant "Product Service" as ProductService
participant "File Upload Service" as FileService
participant "Database" as DB
participant "Cloudinary" as Cloud

== Product Creation ==
Seller -> Frontend: Create new product
Frontend -> Frontend: Upload product images
Frontend -> FileService: POST /api/upload/images
FileService -> Cloud: Upload images
Cloud -> FileService: Return image URLs
FileService -> Frontend: Return uploaded URLs

Frontend -> ProductService: POST /api/products
note right: Include product data + image URLs
ProductService -> DB: Save product
ProductService -> Frontend: Success response
Frontend -> Seller: Product created successfully

== Product Listing ==
Customer -> Frontend: Browse products
Frontend -> ProductService: GET /api/products
ProductService -> DB: Query products
note right: Filter by category, price, etc.
DB -> ProductService: Return products
ProductService -> Frontend: Product list
Frontend -> Customer: Display products

== Product Search ==
Customer -> Frontend: Search products
Frontend -> ProductService: GET /api/products/search?q=term
ProductService -> DB: Text search query
DB -> ProductService: Matching products
ProductService -> Frontend: Search results
Frontend -> Customer: Display results

== Product Update ==
Seller -> Frontend: Edit product
Frontend -> ProductService: PUT /api/products/:id
ProductService -> DB: Check product ownership
alt Seller owns product
    ProductService -> DB: Update product
    ProductService -> Frontend: Success response
    Frontend -> Seller: Product updated
else Not owner
    ProductService -> Frontend: Forbidden
    Frontend -> Seller: Access denied
end

== Product Deletion ==
Seller -> Frontend: Delete product
Frontend -> ProductService: DELETE /api/products/:id
ProductService -> DB: Check product ownership
alt Seller owns product
    ProductService -> DB: Delete product
    ProductService -> Cloud: Delete associated images
    ProductService -> Frontend: Success response
    Frontend -> Seller: Product deleted
else Not owner
    ProductService -> Frontend: Forbidden
    Frontend -> Seller: Access denied
end

== Admin Product Management ==
Admin -> Frontend: Manage all products
Frontend -> ProductService: GET /api/admin/products
ProductService -> DB: Get all products
ProductService -> Frontend: All products
Frontend -> Admin: Display admin view

Admin -> Frontend: Approve/Reject product
Frontend -> ProductService: PUT /api/admin/products/:id/status
ProductService -> DB: Update product status
ProductService -> Frontend: Status updated
Frontend -> Admin: Product status changed

@enduml
