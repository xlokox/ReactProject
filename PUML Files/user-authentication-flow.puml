@startuml User Authentication Flow
!theme plain
skinparam backgroundColor #f8f9fa

title User Authentication and Authorization Flow

actor Customer
actor Seller
actor Admin
participant "Frontend App" as Frontend
participant "Auth Service" as AuthService
participant "JWT Middleware" as JWT
participant "Database" as DB

== User Registration ==
Customer -> Frontend: Register with email/password
Frontend -> AuthService: POST /api/auth/register
AuthService -> DB: Check if user exists
alt User doesn't exist
    AuthService -> DB: Create new user
    AuthService -> AuthService: Hash password
    AuthService -> DB: Save user
    AuthService -> Frontend: Success response
    Frontend -> Customer: Registration successful
else User exists
    AuthService -> Frontend: Error: User already exists
    Frontend -> Customer: Show error message
end

== User Login ==
Customer -> Frontend: Login with credentials
Frontend -> AuthService: POST /api/auth/login
AuthService -> DB: Find user by email
alt Valid credentials
    AuthService -> AuthService: Verify password
    AuthService -> AuthService: Generate JWT token
    AuthService -> Frontend: Return token + user info
    Frontend -> Frontend: Store token in localStorage
    Frontend -> Customer: Redirect to dashboard
else Invalid credentials
    AuthService -> Frontend: Error: Invalid credentials
    Frontend -> Customer: Show error message
end

== Protected Route Access ==
Customer -> Frontend: Access protected route
Frontend -> JWT: Verify token
alt Valid token
    JWT -> DB: Verify user exists
    JWT -> Frontend: Allow access
    Frontend -> Customer: Show protected content
else Invalid/Expired token
    JWT -> Frontend: Unauthorized
    Frontend -> Customer: Redirect to login
end

== Role-based Authorization ==
Seller -> Frontend: Access seller dashboard
Frontend -> JWT: Verify token + role
alt Valid seller token
    JWT -> Frontend: Allow access
    Frontend -> Seller: Show seller dashboard
else Invalid role
    JWT -> Frontend: Forbidden
    Frontend -> Seller: Access denied
end

@enduml
